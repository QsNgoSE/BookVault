server:
  port: 8082

spring:
  application:
    name: auth-service
  profiles:
    active: local
  
  # Database configuration for local development (Docker)
  datasource:
    url: jdbc:postgresql://localhost:5432/bookvault
    username: bookvault
    password: bookvault123
    driver-class-name: org.postgresql.Driver
  
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Redis configuration for local development (Docker)
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

# Disable service discovery for local development
eureka:
  client:
    enabled: false

# JWT configuration
jwt:
  secret: bookvault-secret-key-that-should-be-very-long-and-secure-in-production-environment-with-at-least-32-characters
  expiration: 86400000 # 24 hours in milliseconds

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# CORS configuration for local development
cors:
  allowed-origins: https://qsngose.github.io,http://localhost:5500,http://127.0.0.1:5500,http://localhost:8080,http://localhost:3000,http://127.0.0.1:8080,http://127.0.0.1:3000

# Disable config service for local development
cloud:
  config:
    enabled: false
    import-check:
      enabled: false

# Logging
logging:
  level:
    com.bookvault: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx" 