server:
  port: 8082

spring:
  application:
    name: auth-service
  
  # Disable config server import check for local development
  cloud:
    config:
      enabled: false
      import-check:
        enabled: false
  
  # OPTIMIZED Database configuration with connection pooling
  datasource:
    url: jdbc:postgresql://localhost:5432/bookvault_auth
    username: bookvault
    password: bookvault123
    driver-class-name: org.postgresql.Driver
    # OPTIMIZATION: Connection pooling for better performance
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      pool-name: AuthServiceHikariCP
  
  # OPTIMIZED JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        # OPTIMIZATION: Enable batch processing (removed JCache to prevent issues)
        jdbc:
          batch_size: 20
        connection:
          provider_disables_autocommit: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # OPTIMIZED Redis configuration
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
    password: # no password for local development

# Eureka client configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

# JWT configuration
jwt:
  secret: bookvault-secret-key-that-should-be-very-long-and-secure-in-production
  expiration: 86400000 # 24 hours in milliseconds

# OPTIMIZED Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# OPTIMIZED Logging - Reduce noise, improve performance
logging:
  level:
    com.bookvault.auth: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    com.zaxxer.hikari: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:postgresql://postgres:5432/bookvault_auth

eureka:
  client:
    service-url:
      defaultZone: http://discovery-service:8761/eureka/ 