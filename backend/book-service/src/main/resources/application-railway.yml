spring:
  application:
    name: bookvault-book
  datasource:
    url: jdbc:postgresql://postgres.railway.internal:5432/railway
    username: postgres
    password: LyxjyafXTDmZBQgGaufLHvYJwdNbTwuR
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # Redis configuration for Railway - hardcoded like auth service
  data:
    redis:
      host: redis.railway.internal
      port: 6379
      password: nvJhLcRzJNaXJNUlLFEUCrcFZJMJbQiM
      timeout: 60000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  main:
    lazy-initialization: true

server:
  port: ${PORT:8080}

# JWT configuration
jwt:
  secret: ${JWT_SECRET:bookvault-secret-key-that-should-be-very-long-and-secure-in-production-environment-with-at-least-32-characters}
  expiration: ${JWT_EXPIRATION:86400000}

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.bookvault: INFO
    org.springframework: WARN
    org.hibernate: WARN

# External service URLs
auth:
  service:
    url: ${AUTH_SERVICE_URL:http://localhost:8082}

# CORS configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://*.netlify.app,https://*.vercel.app}
